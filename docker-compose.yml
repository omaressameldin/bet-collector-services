version: '3.2'
services:
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.5.1
    environment:
      - discovery.type=single-node
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
  kibana:
    depends_on:
      - elasticsearch
    image: docker.elastic.co/kibana/kibana:7.5.1
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    ports:
      - "5601:5601"
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data
  elasticsearch-service:
    build:
      context: ./elasticsearch-service/.
      args:
        - PORT=${ELASTIC_SERVICE_PORT}
        - APP_SRC=${ELASTIC_SERVICE_SRC}
    environment:
      - ELASTICSEARCH_URL=http://elasticsearch:9200
    ports:
          - "${ELASTIC_SERVICE_PORT}:${ELASTIC_SERVICE_PORT}"
  user-proto-gen:
    image: omaressameldin/proto-gen
    environment:
      - BUILD_PATH=${PROTO_BUILD_PATH}
      - OUTPUT_PATH=${PROTO_OUTPUT_PATH}
      - FILENAME=${USER_SERVICE_PROTO_FILENAME}
    volumes:
      - type: bind
        target: ${PROTO_OUTPUT_PATH}
        source: ${USER_SERVICE_PATH}${PROTO_OUTPUT_PATH}
      - type: bind
        target: ${PROTO_BUILD_PATH}
        source: ${USER_SERVICE_PROTO_BUILD_PATH}
  user-server:
    depends_on:
      - user-proto-gen
    build:
      context: ./grpc-services/.
      args:
        - FIREBASE_CONFIG=${FIREBASE_CONFIG}
        - APP_SRC=${USER_SERVICE_SRC}
        - PORT=${USER_SERVICE_PORT}
        - COLLECTION=${USER_SERVICE_COLLECTION}
    ports:
      - "${USER_SERVICE_PORT}:${USER_SERVICE_PORT}"
  bet-proto-gen:
    image: omaressameldin/proto-gen
    environment:
      - BUILD_PATH=${PROTO_BUILD_PATH}
      - OUTPUT_PATH=${PROTO_OUTPUT_PATH}
      - FILENAME=${BET_SERVICE_PROTO_FILENAME}
    volumes:
      - type: bind
        target: ${PROTO_OUTPUT_PATH}
        source: ${BET_SERVICE_PATH}${PROTO_OUTPUT_PATH}
      - type: bind
        target: ${PROTO_BUILD_PATH}
        source: ${BET_SERVICE_PROTO_BUILD_PATH}
  bet-server:
    depends_on:
      - bet-proto-gen
    build:
      context: ./grpc-services/.
      args:
        - FIREBASE_CONFIG=${FIREBASE_CONFIG}
        - APP_SRC=${BET_SERVICE_SRC}
        - PORT=${BET_SERVICE_PORT}
        - COLLECTION=${BET_SERVICE_COLLECTION}
        - DEPENDENCIES={"user-service":"user-server:${USER_SERVICE_PORT}"}
  graphql-api:
    build:
      context: .
      dockerfile: ./graphql-api/Dockerfile
      args:
      - PROTO_DIR=${PROTO_DIR}
      - USER_GRPC_SERVICE_PORT=${USER_SERVICE_PORT}
      - USER_GRPC_SERVICE=user-server
      - BET_GRPC_SERVICE_PORT=${BET_SERVICE_PORT}
      - BET_GRPC_SERVICE=bet-server
      - GRAPHQL_API_PORT=${GRAPHQL_API_PORT}
    ports:
      - "${GRAPHQL_API_PORT}:${GRAPHQL_API_PORT}"
volumes:
  elasticsearch-data: